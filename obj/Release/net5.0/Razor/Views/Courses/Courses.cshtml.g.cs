#pragma checksum "/Users/macbookpro/Projects/My_Project/AboutMe/Views/Courses/Courses.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7ab6a5b501ae2a7aa574e7cf469a5cf706995744"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Courses_Courses), @"mvc.1.0.view", @"/Views/Courses/Courses.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/macbookpro/Projects/My_Project/AboutMe/Views/_ViewImports.cshtml"
using AboutMe;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/macbookpro/Projects/My_Project/AboutMe/Views/_ViewImports.cshtml"
using AboutMe.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7ab6a5b501ae2a7aa574e7cf469a5cf706995744", @"/Views/Courses/Courses.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fcde6320410c35fc540bf26f1da86fb24cdd47ad", @"/Views/_ViewImports.cshtml")]
    public class Views_Courses_Courses : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/courses.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/coursesJS.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/macbookpro/Projects/My_Project/AboutMe/Views/Courses/Courses.cshtml"
  
    ViewData["Title"] = "My Courses Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7ab6a5b501ae2a7aa574e7cf469a5cf7069957444620", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div class=""width100"">
    <h1 class=""display-4 text-pink my-shrift margin-top text-center"">COURSES</h1>
    <p class=""text-white font-size22 text-center"">
        Until now I do not have any experience in the IT field.
        I went through the professional software engineering program of
        SoftUni with a specialization - <span class=""text-pink"">C#</span>.
        The courses I have taken are:
    </p>
    <p class=""text-center""><a href=""/Certificate/Certificate"" class=""links"">(Click to see CERTIFICATES)</a></p>

    <br />

    <div class=""paddingTop paddingBottom row"">
        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;ENTRY MODULE -
            </span>
            <span class=""float-left right"">where the basics of programming are studied.</span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom");
            WriteLiteral(@""">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;FUNDAMENTALS MODULE -
            </span>
            <span class=""float-left right"">where I gained fundamental knowledge on C#.</span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;ADVANCED MODULE -
            </span>

            <span class=""float-left right"">
                where the skills for working with the C# language and the .NET platform
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    are upgraded. I studied linear data structures, solving algorithmic problems,working with streams, files and directories, creating template classes, LINQ and others.
                </span>
                <button typ");
            WriteLiteral(@"e=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;OOP MODULE -
            </span>

            <span class=""float-left right"">
                where I studied the principles of object-oriented programming, to work
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    with classes and objects, to use object-oriented modeling and to build hierarchies of classes, SOLID principles and others.
                </span>
                <button type=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left ");
            WriteLiteral(@"left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;MS SQL -
            </span>

            <span class=""float-left right"">
                where serious attention was paid to the relational model, data modeling
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    with ER diagrams (tables and relational links) and work with the SQL language
                    (data extraction, selection, projection, connections, aggregation, grouping, change, delete and insert).
                </span>
                <button type=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;ENTITY FRAMEWORK CORE -
            </span>

            <span class=""float-left ");
            WriteLiteral(@"right"">
                here I studied the ""database first"" and ""code first"" approaches, database
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    queries and performing CRUD operations, as well as importing and exporting to various data formats (JSON, XML).
                </span>
                <button type=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;WEB BASICS -
            </span>

            <span class=""float-left right"">
                here I studied asynchronous programming, working with HTTP protocol,
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    cookies and sessions, working with MVC temp");
            WriteLiteral(@"late and others.
                </span>
                <button type=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;ASP.NET CORE -
            </span>

            <span class=""float-left right"">
                here I studied how to make web applications with the Model-View-
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    Controller architecture using HTML5, databases, Entity Framework Core, Razor view engine and other technologies.
                </span>
                <button type=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
   ");
            WriteLiteral(@"         <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;JS ADVANCED -
            </span>

            <span class=""float-left right"">
                here I learned the basics of syntax, working with arrays, objects,
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    classes and writing functions, working with the DOM tree, manipulating it and working with events.
                </span>
                <button type=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />

        <div class=""text-white font-size20 width100 paddingBottom"">
            <span class=""text-pink my-shrift float-left left"">
                <span class=""text-white"">*</span>
                &nbsp;&nbsp;JS APPLICATIONS -
            </span>

            <span class=""float-left right"">
                here I learned HTTP requests and ");
            WriteLiteral(@"how to use them, REST Services,
                <span class=""points"">...</span>
                <span class=""text float-left"">
                    Promises, async / await, Templating and Routing, SPA and others.
                </span>
                <button type=""button"" class=""float-right btn btn-outline"">show more</button>
            </span>
        </div>

        <br />
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7ab6a5b501ae2a7aa574e7cf469a5cf70699574413746", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
